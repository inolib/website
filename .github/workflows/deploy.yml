name: CI/CD Deployment

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set Up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to PRODUCTION
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.SERVER_IP }} '
            cd /home/ubuntu/inolib-website/packages/app-www
            git fetch origin main
            git reset --hard origin/main
            rm -f .env
            cp .env.production .env
            pnpm install --frozen-lockfile
            rm -rf .next
            pnpm run build:app:ci
            pm2 reload strapi --update-env || pm2 start "pnpm start" --name strapi --update-env

          '
      - name: Deploy STRAPI PRODUCTION
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.SERVER_IP }} '
            cd /home/ubuntu/inolib-website/packages/app-strapi
            git fetch origin main
            git reset --hard origin/main
            cp .env.production .env
            pnpm install --frozen-lockfile
            pnpm run build
            pm2 start "pnpm start" --name strapi --update-env || pm2 reload strapi --update-env
          '

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set Up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to STAGING
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.SERVER_IP }} '
            cd /home/ubuntu/inolib-website/packages/app-www
            git fetch origin develop
            git reset --hard origin/develop
            rm -f .env 
            cp .env.staging .env
            pnpm install --frozen-lockfile
            rm -rf .next
            pnpm run build:app:ci
            pm2 reload nextjs-front --update-env
          '
      - name: Deploy STRAPI STAGING
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.SERVER_IP }} '
            cd /home/ubuntu/inolib-website/packages/app-strapi
            git fetch origin develop
            git reset --hard origin/develop
            cp .env.staging .env
            pnpm install --frozen-lockfile
            pnpm run build
            pm2 reload nextjs-front --update-env || pm2 start "pnpm start -- --port 8001" --name nextjs-front --update-env
          '
